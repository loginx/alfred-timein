name: Alfred TimeIn Go Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    name: Release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Extract version from tag
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> "$GITHUB_OUTPUT"
      - name: Update workflow version in info.plist (artifact only)
        run: |
          plutil -replace version -string "${{ steps.get_version.outputs.version }}" workflow/info.plist
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      - name: Run Go tests
        run: go test ./...
      - name: Build Go binaries (amd64)
        run: |
          GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -trimpath -o geotz_amd64 ./cmd/geotz
          GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -trimpath -o timein_amd64 ./cmd/timein
      - name: Build Go binaries (arm64)
        run: |
          GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -trimpath -o geotz_arm64 ./cmd/geotz
          GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -trimpath -o timein_arm64 ./cmd/timein
      - name: Create universal binaries with lipo
        run: |
          lipo -create -output geotz geotz_amd64 geotz_arm64
          lipo -create -output timein timein_amd64 timein_arm64
          rm geotz_amd64 geotz_arm64 timein_amd64 timein_arm64
      - name: Bundle Go binaries for release
        run: |
          mkdir -p bin
          mv geotz timein bin/
          cd bin && zip ../bin.zip *
      - name: Create Alfred workflow archive
        run: |
          zip -r TimeIn.alfredworkflow . -x '*.git*' -x '*.github*' -x '*.DS_Store' -x 'node_modules*' -x 'package*.json' -x '*.md' -x 'test*' -x 'src*' -x 'about*' -x 'docs*' -x 'build*' -x '*.zip'
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            TimeIn.alfredworkflow
            bin.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 